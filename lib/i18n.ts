export type Language = 'en' | 'zh-HK';

export interface Translations {
  // Header
  title: string;
  subtitle: string;
  
  // Loading and error states
  loading: string;
  loadingMessage: string;
  error: string;
  
  // Buttons
  downloadOriginalCSV: string;
  downloadCSV: string;
  clearFilters: string;
  
  // Table headers
  reportsTableTitle: string;
  reportsCount: string;
  year: string;
  caseReference: string;
  titleEnglish: string;
  titleTraditionalChinese: string;
  titleSimplifiedChinese: string;
  organizations: string;
  completedOn: string;
  reportType: string;
  viewFiles: string;
  
  // Filters
  searchPlaceholder: string;
  allYears: string;
  allTypes: string;
  allOrganizations: string;
  allLanguages: string;
  others: string;
  
  // Language filter options
  languageFilter: string;
  english: string;
  traditionalChinese: string;
  simplifiedChinese: string;
  
  // Messages
  noDataAvailable: string;
  noDataMessage: string;
  noMatchingReports: string;
  
  
  // File operations
  fileNotFound: string;
  errorAccessingFile: string;
  noFilePathAvailable: string;
}

export const translations: Record<Language, Translations> = {
  en: {
    // Header
    title: 'Hong Kong Ombudsman Reports',
    subtitle: 'Search and download Hong Kong Ombudsman reports from the generated reports table',
    
    // Loading and error states
    loading: 'Loading',
    loadingMessage: 'Loading reports table...',
    error: 'Error',
    
    // Buttons
    downloadOriginalCSV: 'Download Original CSV',
    downloadCSV: 'Download CSV',
    clearFilters: 'Clear Filters',
    
    // Table headers
    reportsTableTitle: 'Reports Table',
    reportsCount: 'reports',
    year: 'Year',
    caseReference: 'Case Reference',
    titleEnglish: 'Title (English)',
    titleTraditionalChinese: 'Title (Traditional Chinese)',
    titleSimplifiedChinese: 'Title (Simplified Chinese)',
    organizations: 'Organizations',
    completedOn: 'Completed On',
    reportType: 'Report Type',
    viewFiles: 'View Files',
    
    // Filters
    searchPlaceholder: 'Search reports...',
    allYears: 'All Years',
    allTypes: 'All Types',
    allOrganizations: 'All Organizations',
    allLanguages: 'All Languages',
    others: 'Others',
    
    // Language filter options
    languageFilter: 'Language',
    english: 'English',
    traditionalChinese: 'Traditional Chinese',
    simplifiedChinese: 'Simplified Chinese',
    
    // Messages
    noDataAvailable: 'No Data Available',
    noDataMessage: 'No reports data was found in the CSV file. Please ensure the reports_table.csv file has been generated by running the Python script generate_reports_table.py.',
    noMatchingReports: 'No reports match the current filters.',
    
    
    // File operations
    fileNotFound: 'File not found',
    errorAccessingFile: 'Error accessing file',
    noFilePathAvailable: 'No file path available for'
  },
  
  'zh-HK': {
    // Header
    title: '香港申訴專員公署報告',
    subtitle: '搜尋及下載香港申訴專員公署報告',
    
    // Loading and error states
    loading: '載入中',
    loadingMessage: '正在載入報告表格...',
    error: '錯誤',
    
    // Buttons
    downloadOriginalCSV: '下載原始 CSV',
    downloadCSV: '下載 CSV',
    clearFilters: '清除篩選',
    
    // Table headers
    reportsTableTitle: '報告表格',
    reportsCount: '份報告',
    year: '年份',
    caseReference: '案件編號',
    titleEnglish: '標題（英文）',
    titleTraditionalChinese: '標題（繁體中文）',
    titleSimplifiedChinese: '標題（簡體中文）',
    organizations: '相關機構',
    completedOn: '完成日期',
    reportType: '報告類型',
    viewFiles: '檢視檔案',
    
    // Filters
    searchPlaceholder: '搜尋報告...',
    allYears: '所有年份',
    allTypes: '所有類型',
    allOrganizations: '所有機構',
    allLanguages: '所有語言',
    others: '其他',
    
    // Language filter options
    languageFilter: '語言',
    english: '英文',
    traditionalChinese: '繁體中文',
    simplifiedChinese: '簡體中文',
    
    // Messages
    noDataAvailable: '沒有可用資料',
    noDataMessage: '在 CSV 檔案中找不到報告資料。請確保已運行 Python 腳本 generate_reports_table.py 生成 reports_table.csv 檔案。',
    noMatchingReports: '沒有符合目前篩選條件的報告。',
    
    
    // File operations
    fileNotFound: '找不到檔案',
    errorAccessingFile: '存取檔案時發生錯誤',
    noFilePathAvailable: '沒有可用的檔案路徑'
  }
};

// Language detection (client-side only)
export function detectBrowserLanguage(): Language {
  if (typeof navigator === 'undefined') {
    return 'zh-HK'; // Default to Traditional Chinese on server
  }
  
  const browserLang = navigator.language || navigator.languages[0];
  
  // Check for Chinese variants
  if (browserLang.startsWith('zh')) {
    // Check for Traditional Chinese variants
    if (browserLang.includes('HK') ||
        browserLang.includes('TW') ||
        browserLang.includes('MO') ||
        browserLang === 'zh-Hant') {
      return 'zh-HK';
    }
    // For other Chinese variants, still default to Traditional Chinese
    // since this is Hong Kong Ombudsman
    return 'zh-HK';
  }
  
  // For all other languages, use English
  return 'en';
}

// Parse Accept-Language header for server-side detection
export function parseAcceptLanguage(acceptLanguage: string): Language {
  if (!acceptLanguage) {
    return 'zh-HK'; // Default for Hong Kong context
  }

  // Parse Accept-Language header to find preferred languages
  const languages = acceptLanguage
    .split(',')
    .map(lang => {
      const [locale, q = '1'] = lang.trim().split(';q=');
      return {
        locale: locale.trim(),
        quality: parseFloat(q)
      };
    })
    .sort((a, b) => b.quality - a.quality);

  // Check for Chinese variants first
  for (const { locale } of languages) {
    if (locale.startsWith('zh')) {
      // Check for Traditional Chinese variants
      if (locale.includes('HK') ||
          locale.includes('TW') ||
          locale.includes('MO') ||
          locale === 'zh-Hant' ||
          locale === 'zh-TW' ||
          locale === 'zh-HK' ||
          locale === 'zh-MO') {
        return 'zh-HK';
      }
      // For Simplified Chinese, still default to Traditional Chinese
      // since this is Hong Kong Ombudsman
      return 'zh-HK';
    }
    
    // Check for English
    if (locale.startsWith('en')) {
      return 'en';
    }
  }
  
  // Default to Traditional Chinese for Hong Kong context
  return 'zh-HK';
}

// Get translations for a specific language
export function getTranslations(language: Language): Translations {
  return translations[language];
}

// Storage key for language preference
export const LANGUAGE_STORAGE_KEY = 'ombudsman-app-language';